{"version":3,"sources":["list.js","NewList.js","App.js","serviceWorker.js","index.js"],"names":["List","props","listItems","product","map","item","Form","key","className","Row","Col","xs","Control","type","value","text","id","onChange","e","editText","target","number","editNumber","date","editDate","Group","as","Label","htmlFor","column","sm","isChecked","checked","toggleChange","Button","onClick","deleteElement","icon","faTrash","NewList","expArr","localStorage","getItem","JSON","parse","elem","disabled","length","Fragment","App","checkDates","tempVar","filter","index","arr","conDate","Date","now","isNotify","notifySet","setItem","stringify","setState","state","addMemory","newEinkaufList","console","log","addElement","event","preventDefault","newElement","element","newProducts","products","handleText","handleNumber","handleDate","indexEl","indexOf","splice","newText","newNumber","newDate","notifyMe","Notification","tag","body","renotify","window","permission","setTimeout","requestPermission","tempArr","tempInterval","handle","setInterval","this","clearInterval","Container","fluid","md","variant","notify","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faa18999.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport {Col, Row, Button, Form} from \"react-bootstrap\";\r\n\r\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function List(props){\r\n    const listItems = props.product.map(item =>{\r\n        return <Form key={item.key} className=\"bg-info pt-3\" >\r\n            <Form.Row>\r\n                <Col xs={2}>\r\n                    <Form.Control type=\"text\"\r\n                           value={item.text}\r\n                           id={item.key}\r\n                           onChange={(e)=>props.editText(e.target.value, item.key)}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={2}>\r\n                    <Form.Control type=\"number\"\r\n                           value={item.number}\r\n                           id={item.key}\r\n                           onChange={(e)=>props.editNumber(e.target.value, item.key)}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xs={2}>\r\n                    <Form.Control type=\"date\"\r\n                           value={item.date}\r\n                           id={item.key}\r\n                           onChange={(e)=>props.editDate(e.target.value, item.key)}\r\n                    />\r\n                </Col>\r\n                <Col xs={3}>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label htmlFor=\"check\" column sm=\"8\" className=\"text-light text-center\">\r\n                            {item.isChecked === true? 'Erledigt': 'Unerledigt'}\r\n                        </Form.Label>\r\n                        <Col sm=\"4\">\r\n                            <Form.Control type=\"checkbox\"\r\n                                   id={item.key}\r\n                                   value={item.isChecked}\r\n                                          checked={item.isChecked}\r\n                                   onChange={(e)=>props.toggleChange(e.target.checked, item.key)}\r\n                            />\r\n                        </Col>\r\n\r\n                    </Form.Group>\r\n                </Col>\r\n\r\n                <Col xs={3}>\r\n                    <Button onClick={()=>props.deleteElement(item)}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Form.Row>\r\n        </Form>\r\n    })\r\n    return(\r\n        <div>{listItems}</div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {Col, Form} from \"react-bootstrap\";\r\n\r\nfunction NewList() {\r\n\r\n    let expArr = [];\r\n    if (localStorage.getItem('expArr') !== null) {\r\n        expArr = JSON.parse(localStorage.getItem('expArr'))\r\n    } else {\r\n        expArr = []\r\n    }\r\n\r\n    let List = expArr.map(elem => {\r\n        return (\r\n            <Form key={elem.key} className=\"pb-2\">\r\n                <Form.Row className=\"m-2\">\r\n                    <Col xs={2}>\r\n                        <Form.Label className=\"pt-1\">\r\n                            Abgelaufenes Produkt:\r\n                        </Form.Label>\r\n                    </Col>\r\n                    <Col xs={2}>\r\n                        <Form.Control type=\"text\"\r\n                                      value={elem.text}\r\n                                      disabled\r\n                        />\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n        )\r\n    })\r\n\r\n\r\n    if (expArr.length === 0) {\r\n        return null\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"mt-2\">Expire List:</h2>\r\n                <div>{List}</div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nexport default NewList;","import React from 'react';\nimport './App.css';\nimport List from \"./list\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Col, Container, Row, Button, Form} from \"react-bootstrap\";\nimport NewList from \"./NewList\";\n\nexport default class App extends React.Component{\n  constructor(props) {\n    super(props);\n\n    let tempArr=[];\n    if(localStorage.getItem('LocalData')!==null)\n      tempArr=JSON.parse(localStorage.getItem('LocalData'));\n\n    this.state={\n          products: tempArr,\n          element:{\n            text: '',\n            key: '',\n            number: '',\n            date: '',\n            isChecked: false,\n            isNotify: false\n          },\n          tempInterval: ''\n    }\n  }\n\n\n  componentDidMount() {\n    const handle = setInterval(this.checkDates, 2000);\n    this.setState({\n      tempInterval: handle\n    })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.tempInterval)\n  }\n\n  checkDates=()=>{\n    let tempVar = [];\n    if (localStorage.getItem('LocalData') !== null){\n      tempVar = JSON.parse(localStorage.getItem('LocalData'))\n    } else {tempVar = []}\n\n    const expArr = tempVar.filter((elem,index, arr)=>{\n      let dateConvert = Date.parse(elem.date);\n      let conDate = dateConvert < Date.now() && elem.isChecked === false;\n\n     if (conDate === true && elem.isNotify === false) {\n       this.notifySet(elem);\n       tempVar[index].isNotify=true;\n     }\n\n      return conDate\n    })\n\n    localStorage.setItem('expArr', JSON.stringify(expArr));\n    localStorage.setItem('LocalData', JSON.stringify(tempVar));\n\n    this.setState(this.state)\n  }\n\n  addMemory=(newEinkaufList)=>{\n    localStorage.setItem('LocalData', JSON.stringify(newEinkaufList));\n    console.log(localStorage);\n  }\n\n  addElement=(event)=>{\n    event.preventDefault();\n\n    const newElement = this.state.element;\n    if(newElement.text!==\"\" && newElement.number!==\"\"\n        && newElement.date!==\"\") {\n      const newProducts = [...this.state.products, newElement];\n\n      this.addMemory(newProducts);\n\n      this.setState({\n        products: newProducts,\n        element: {\n          text: '',\n          key: '',\n          number: '',\n          date: '',\n          isChecked: false,\n          isNotify: false\n        }\n      })\n    }\n  }\n\n  handleText=(event)=>{\n    this.setState({\n      element: {\n        text: event.target.value,\n        key: Date.now(),\n        number: this.state.element.number,\n        date: this.state.element.date,\n        isChecked: this.state.element.isChecked,\n        isNotify: this.state.element.isNotify\n      }\n    })\n  }\n  handleNumber=(event)=>{\n    this.setState({\n      element:{\n        number: event.target.value,\n        key: Date.now(),\n        text: this.state.element.text,\n        date: this.state.element.date,\n        isChecked: this.state.element.isChecked,\n        isNotify: this.state.element.isNotify\n      }\n    })\n  }\n  handleDate=(event)=>{\n    this.setState({\n      element:{\n        date: event.target.value,\n        key: Date.now(),\n        text: this.state.element.text,\n        number: this.state.element.number,\n        isChecked: this.state.element.isChecked,\n        isNotify: this.state.element.isNotify\n      }\n    })\n  }\n\n  deleteElement=(item)=>{\n    let arr = this.state.products;\n    let indexEl = arr.indexOf(item);\n    if(indexEl > -1) {\n      arr.splice(indexEl, 1);\n    }\n\n    this.addMemory(arr);\n\n    this.setState({\n      products: arr\n    })\n  }\n\n  editText =(newText, id)=>{\n   const arr = this.state.products;\n\n    // eslint-disable-next-line array-callback-return\n    arr.map(item => {\n      if(item.key === id){\n        item.text = newText\n      }\n    })\n\n    this.addMemory(arr);\n\n    this.setState({\n      text:arr\n    })\n  }\n  editNumber =(newNumber, id)=>{\n    const arr = this.state.products;\n\n    // eslint-disable-next-line array-callback-return\n    arr.map(item=>{\n      if(item.key === id){\n        item.number = newNumber\n      }\n    })\n\n    this.addMemory(arr);\n\n    this.setState({\n      text: arr\n    })\n  }\n  editDate =(newDate, id)=>{\n    const arr = this.state.products;\n\n    // eslint-disable-next-line array-callback-return\n    arr.map(item=>{\n      if(item.key === id){\n        item.date = newDate\n      }\n    })\n\n    this.addMemory(arr);\n\n    this.setState({\n      text:arr\n    })\n  }\n\n  toggleChange = (isChecked, id)=> {\n    const arr = this.state.products;\n    // eslint-disable-next-line array-callback-return\n    arr.map(item=>{\n      if(item.key===id){\n        item.isChecked= !item.isChecked\n      }\n    })\n    console.log('check', arr)\n    this.addMemory(arr);\n\n    this.setState({\n      products: arr\n    })\n  }\n\n/*Notification*/\n  notifyMe = (elem)=>{\n    let notification = new Notification(\"Expired product\",{\n      tag: \"ache-mail\",\n      body: elem.text,\n      renotify: true\n    });\n  }\n\n  notifySet=(elem)=>{\n    if(!(\"Notification\" in window)){\n      console.log(\"browser is not support\")\n    } else if (Notification.permission === \"granted\"){\n      setTimeout(()=> {this.notifyMe(elem)}, 1000);\n    } else if (Notification.permission !== 'denied'){\n      Notification.requestPermission(function (permission){\n        if (permission === \"granted\") {\n          setTimeout(()=>{this.notifyMe(elem)}, 1000)\n        }\n      })\n    }\n  }\n\n\n  render(){\n    return(\n        <Container fluid=\"md\" className=\"bg-light\">\n          <Row className=\"justify-content-sm-center\">\n              <h1>Einkaufsplanner</h1>\n          </Row>\n\n          <Form>\n            <Form.Row className=\"align-items-center\">\n              <Form.Group as={Col} md={3}>\n                <Form.Label htmlFor=\"name\">Name:</Form.Label>\n                <Form.Control type=\"text\"\n                       id=\"name\"\n                       value={this.state.element.text}\n                       onChange={this.handleText}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} md={3}>\n                <Form.Label htmlFor=\"number\">Number:</Form.Label>\n                <Form.Control type=\"number\"\n                       id=\"number\"\n                       value={this.state.element.number}\n                       onChange={this.handleNumber}\n                />\n              </Form.Group>\n              <Form.Group as={Col} md={3}>\n                <Form.Label htmlFor=\"date\">Date:</Form.Label>\n                <Form.Control type=\"date\"\n                       id=\"date\"\n                       value={this.state.element.date}\n                       onChange={this.handleDate}\n                />\n              </Form.Group>\n\n                <Button className=\"mt-3\"\n                        variant=\"outline-success\"\n                        onClick={this.addElement}>\n                  Add\n                </Button>\n              </Form.Row>\n          </Form>\n          <List\n              product = {this.state.products}\n              deleteElement = {this.deleteElement}\n              editText = {this.editText}\n              editNumber = {this.editNumber}\n              editDate = {this.editDate}\n              toggleChange={this.toggleChange}\n              notify =  {this.notifySet}\n          />\n          <NewList/>\n        </Container>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}